# Generated by roxygen2: do not edit by hand

S3method("!",rle)
S3method("!=",rle)
S3method("$",control.list)
S3method("%%",rle)
S3method("%/%",rle)
S3method("&",rle)
S3method("*",rle)
S3method("+",rle)
S3method("-",rle)
S3method("/",rle)
S3method("<",rle)
S3method("<=",rle)
S3method("==",rle)
S3method(">",rle)
S3method(">=",rle)
S3method("[",wmatrix)
S3method("[<-",wmatrix)
S3method("^",rle)
S3method("lrowweights<-",linwmatrix)
S3method("lrowweights<-",logwmatrix)
S3method("lrowweights<-",matrix)
S3method("rowweights<-",linwmatrix)
S3method("rowweights<-",logwmatrix)
S3method("rowweights<-",matrix)
S3method("|",rle)
S3method(all,rle)
S3method(any,rle)
S3method(as.linwmatrix,linwmatrix)
S3method(as.linwmatrix,logwmatrix)
S3method(as.linwmatrix,matrix)
S3method(as.logwmatrix,linwmatrix)
S3method(as.logwmatrix,logwmatrix)
S3method(as.logwmatrix,matrix)
S3method(c,rle)
S3method(compress_rows,linwmatrix)
S3method(compress_rows,logwmatrix)
S3method(decompress_rows,wmatrix)
S3method(lrowweights,linwmatrix)
S3method(lrowweights,logwmatrix)
S3method(order,data.frame)
S3method(order,default)
S3method(order,matrix)
S3method(print,control.list)
S3method(print,linwmatrix)
S3method(print,logwmatrix)
S3method(print,wmatrix)
S3method(rep,rle)
S3method(rowweights,linwmatrix)
S3method(rowweights,logwmatrix)
S3method(sort,data.frame)
export("NVL<-")
export("lrowweights<-")
export("rowweights<-")
export(ERRVL)
export(NVL)
export(all_identical)
export(append.rhs.formula)
export(as.linwmatrix)
export(as.logwmatrix)
export(binop.rle)
export(check.control.class)
export(compact.rle)
export(compress.data.frame)
export(compress_rows)
export(control.remap)
export(decompress.data.frame)
export(decompress_rows)
export(is.linwmatrix)
export(is.logwmatrix)
export(is.wmatrix)
export(linwmatrix)
export(log_mean_exp)
export(log_sum_exp)
export(logwmatrix)
export(lrowweights)
export(lweighted.mean)
export(lweighted.var)
export(nonsimp.update.formula)
export(opttest)
export(order)
export(paste.and)
export(rowweights)
export(set.control.class)
export(statnet.cite.foot)
export(statnet.cite.head)
export(statnet.cite.pkg)
export(statnetStartupMessage)
export(sweep_cols.matrix)
export(term.list.formula)
export(vector.namesmatch)
importFrom(methods,is)
importFrom(stats,as.formula)
useDynLib(statnet.common)
